=begin
#Kinde Management API

# Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

The version of the OpenAPI document: 1
Contact: support@kinde.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KindeApi::ConnectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ConnectionsApi' do
  before do
    # run before each test
    @api_instance = KindeApi::ConnectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConnectionsApi' do
    it 'should create an instance of ConnectionsApi' do
      expect(@api_instance).to be_instance_of(KindeApi::ConnectionsApi)
    end
  end

  # unit tests for create_connection
  # Create Connection
  # Create Connection.  &lt;div&gt;   &lt;code&gt;create:connections&lt;/code&gt; &lt;/div&gt; 
  # @param create_connection_request Connection details.
  # @param [Hash] opts the optional parameters
  # @return [CreateConnectionResponse]
  describe 'create_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_connection
  # Delete Connection
  # Delete connection.  &lt;div&gt;   &lt;code&gt;delete:connections&lt;/code&gt; &lt;/div&gt; 
  # @param connection_id The identifier for the connection.
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'delete_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_connection
  # Get Connection
  # Get Connection.  &lt;div&gt;   &lt;code&gt;read:connections&lt;/code&gt; &lt;/div&gt; 
  # @param connection_id The unique identifier for the connection.
  # @param [Hash] opts the optional parameters
  # @return [Connection]
  describe 'get_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_connections
  # Get connections
  # Returns a list of authentication connections. Optionally you can filter this by a home realm domain.  &lt;div&gt;   &lt;code&gt;read:connections&lt;/code&gt; &lt;/div&gt; 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Number of results per page. Defaults to 10 if parameter not sent.
  # @option opts [String] :home_realm_domain Filter the results by the home realm domain.
  # @option opts [String] :starting_after The ID of the connection to start after.
  # @option opts [String] :ending_before The ID of the connection to end before.
  # @return [GetConnectionsResponse]
  describe 'get_connections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_connection
  # Replace Connection
  # Replace Connection Config.  &lt;div&gt;   &lt;code&gt;update:connections&lt;/code&gt; &lt;/div&gt; 
  # @param connection_id The unique identifier for the connection.
  # @param replace_connection_request The complete connection configuration to replace the existing one.
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'replace_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_connection
  # Update Connection
  # Update Connection.  &lt;div&gt;   &lt;code&gt;update:connections&lt;/code&gt; &lt;/div&gt; 
  # @param connection_id The unique identifier for the connection.
  # @param update_connection_request The fields of the connection to update.
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'update_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
