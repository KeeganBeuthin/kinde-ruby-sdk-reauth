=begin
#Kinde Management API

# Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

The version of the OpenAPI document: 1
Contact: support@kinde.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KindeApi::PropertiesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PropertiesApi' do
  before do
    # run before each test
    @api_instance = KindeApi::PropertiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PropertiesApi' do
    it 'should create an instance of PropertiesApi' do
      expect(@api_instance).to be_instance_of(KindeApi::PropertiesApi)
    end
  end

  # unit tests for create_property
  # Create Property
  # Create property.  &lt;div&gt;   &lt;code&gt;create:properties&lt;/code&gt; &lt;/div&gt; 
  # @param create_property_request Property details.
  # @param [Hash] opts the optional parameters
  # @return [CreatePropertyResponse]
  describe 'create_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_property
  # Delete Property
  # Delete property.  &lt;div&gt;   &lt;code&gt;delete:properties&lt;/code&gt; &lt;/div&gt; 
  # @param property_id The unique identifier for the property.
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'delete_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_properties
  # List properties
  # Returns a list of properties  &lt;div&gt;   &lt;code&gt;read:properties&lt;/code&gt; &lt;/div&gt; 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Number of results per page. Defaults to 10 if parameter not sent.
  # @option opts [String] :starting_after The ID of the property to start after.
  # @option opts [String] :ending_before The ID of the property to end before.
  # @option opts [String] :context Filter results by user,  organization or application context
  # @return [GetPropertiesResponse]
  describe 'get_properties test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_property
  # Update Property
  # Update property.  &lt;div&gt;   &lt;code&gt;update:properties&lt;/code&gt; &lt;/div&gt; 
  # @param property_id The unique identifier for the property.
  # @param update_property_request The fields of the property to update.
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'update_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
