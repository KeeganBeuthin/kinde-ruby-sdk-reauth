=begin
#Kinde Management API

# Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

The version of the OpenAPI document: 1
Contact: support@kinde.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KindeApi::PropertyCategoriesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PropertyCategoriesApi' do
  before do
    # run before each test
    @api_instance = KindeApi::PropertyCategoriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PropertyCategoriesApi' do
    it 'should create an instance of PropertyCategoriesApi' do
      expect(@api_instance).to be_instance_of(KindeApi::PropertyCategoriesApi)
    end
  end

  # unit tests for create_category
  # Create Category
  # Create category.  &lt;div&gt;   &lt;code&gt;create:property_categories&lt;/code&gt; &lt;/div&gt; 
  # @param create_category_request Category details.
  # @param [Hash] opts the optional parameters
  # @return [CreateCategoryResponse]
  describe 'create_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_categories
  # List categories
  # Returns a list of categories.  &lt;div&gt;   &lt;code&gt;read:property_categories&lt;/code&gt; &lt;/div&gt; 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Number of results per page. Defaults to 10 if parameter not sent.
  # @option opts [String] :starting_after The ID of the category to start after.
  # @option opts [String] :ending_before The ID of the category to end before.
  # @option opts [String] :context Filter the results by User or Organization context
  # @return [GetCategoriesResponse]
  describe 'get_categories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_category
  # Update Category
  # Update category.  &lt;div&gt;   &lt;code&gt;update:property_categories&lt;/code&gt; &lt;/div&gt; 
  # @param category_id The unique identifier for the category.
  # @param update_category_request The fields of the category to update.
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'update_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
