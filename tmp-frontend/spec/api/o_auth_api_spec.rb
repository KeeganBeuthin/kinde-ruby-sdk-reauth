=begin
#Kinde Account API

# Provides endpoints to operate on an authenticated user.  ## Intro  ## How to use  1. Get a user access token - this can be obtained when a user signs in via the methods you've setup in Kinde (e.g. Google, passwordless, etc).  2. Call one of the endpoints below using the user access token in the Authorization header as a Bearer token. Typically, you can use the `getToken` command in the relevant SDK. 

The version of the OpenAPI document: 1
Contact: support@kinde.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KindeFrontendApi::OAuthApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OAuthApi' do
  before do
    # run before each test
    @api_instance = KindeFrontendApi::OAuthApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OAuthApi' do
    it 'should create an instance of OAuthApi' do
      expect(@api_instance).to be_instance_of(KindeFrontendApi::OAuthApi)
    end
  end

  # unit tests for get_user_profile_v2
  # Get user profile
  # This endpoint returns a user&#39;s ID, names, profile picture URL and email of the currently logged in user. 
  # @param [Hash] opts the optional parameters
  # @return [UserProfileV2]
  describe 'get_user_profile_v2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for token_introspection
  # Introspect
  # Retrieve information about the provided token.
  # @param token The token to be introspected.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token_type_hint A hint about the token type being queried in the request.
  # @return [TokenIntrospect]
  describe 'token_introspection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for token_revocation
  # Revoke token
  # Use this endpoint to invalidate an access or refresh token. The token will no longer be valid for use.
  # @param client_id The &#x60;client_id&#x60; of your application.
  # @param token The token to be revoked.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_secret The &#x60;client_secret&#x60; of your application. Required for backend apps only.
  # @option opts [String] :token_type_hint The type of token to be revoked.
  # @return [nil]
  describe 'token_revocation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
